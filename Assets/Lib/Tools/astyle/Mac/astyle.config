# AStyle Config

# Save original code
--suffix=none

# base style, which requires braket after if/else
# int main(int argc, char *argv[])
# {
#     while(n == y) {
#         func1();
#         if (flag) {
#             func2();
#         } else {
#             func3();
#         }
#     }
#     func4();
# }
# class Test
# {
# public:
#     int n_;
# };
--style=allman

###############################
# Indents
###############################

# indent is 4 spaces
--indent=spaces=4

# indent within classes
--indent-classes

# indent within switches
--indent-switches

# indent within cases
--indent-cases

# indent within namespaces
--indent-namespaces

# indent preprocess block
--indent-preproc-block

# indent preprocess defines
--indent-preproc-define

# indent one line comments
--indent-col1-comments

# conditional indent
--min-conditional-indent=0

# max indent of a line
--max-instatement-indent=120

###############################
# Paddings
###############################

# add paddings to blocks
--break-blocks

# add padding to operator
--pad-oper

# add padding after if/for/while
--pad-header

# delete empty lines in func
--delete-empty-lines

# delete space between paranthesis
--unpad-paren

# pointer and reference with type (not used in cs)
# char* foo1;
# char& foo2;
--align-pointer=type
--align-reference=type


###############################
# Formats
###############################

# add brakets to if/else/while/for
--add-brackets
--add-one-line-brackets

# break after closing brakets
# --break-closing-brackets

# tabs to spaces
--convert-tabs

# set max code length
--max-code-length=200

# break after || or &&
--break-after-logical

###############################
# e.t.c.
###############################

# set format to c#
--mode=cs

# set lineend to \r
--lineend=linux

# set to recursive
# --recursive

# do not change the original date
--preserve-date

# only shows formatted files
--formatted
